<launch>
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />


  <!-- Filters based on distance from cam. Not very adaptive. Would be better if filtered based on some kind of fake data, maybe from Gazebo-->
  <!-- Run a passthrough filter to clean NaNs -->

  <!-- Camera 1 -->
  <node pkg="nodelet" type="nodelet" name="passthrough1_z" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/camera1/depth/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.0
      filter_limit_max: 2.1
      filter_limit_negative: False
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="passthrough1" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/passthrough1_z/output" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -0.4
      filter_limit_max: 0.4
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- Camera 2 -->
  <node pkg="nodelet" type="nodelet" name="passthrough2_z" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/camera2/depth/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.0
      filter_limit_max: 2.2
      filter_limit_negative: False
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet" name="passthrough2" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/passthrough2_z/output" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -0.4
      filter_limit_max: 0.4
      filter_limit_negative: False
    </rosparam>
  </node>

</launch>